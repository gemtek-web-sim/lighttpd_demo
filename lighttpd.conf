server.modules = (
#	"mod_rewrite",
	"mod_redirect",
	"mod_alias",
	# "mod_cookie_auth",
#	"mod_auth",
	# "mod_csrf",
#	"mod_status",
	"mod_setenv",
#	"mod_fastcgi",
	"mod_proxy",
#	"mod_simple_vhost",
	"mod_cgi",
#	"mod_ssi",
#	"mod_expire",
	"mod_compress",
#	"mod_webdav",
	"mod_openssl"
)

server.network-backend = "write"
server.document-root = "/home/alfie/PROJECT/www/"

$HTTP["scheme"] == "http" {
    # capture vhost name with regex conditiona -> %0 in redirect pattern
	# must be the most inner block to the redirect rule
	$HTTP["host"] =~ ".*" {
		$HTTP["url"] !~ "^/debug/" {
			url.redirect = (".*" => "https://%0$0")
		}
	}
}

index-file.names = ( "index.html", "default.html", "index.htm", "default.htm" )

## mimetype mapping
mimetype.assign = (
	".pdf"   => "application/pdf",
	".class" => "application/octet-stream",
	".pac"   => "application/x-ns-proxy-autoconfig",
	".swf"   => "application/x-shockwave-flash",
	".json"   => "application/json",
	".wav"   => "audio/x-wav",
	".gif"   => "image/gif",
	".jpg"   => "image/jpeg",
	".jpeg"  => "image/jpeg",
	".png"   => "image/png",
	".svg"   => "image/svg+xml",
	".css"   => "text/css;charset=UTF-8",
	".html"  => "text/html;charset=UTF-8",
	".htm"   => "text/html;charset=UTF-8",
	".js"    => "text/javascript;charset=UTF-8",
	".txt"   => "text/plain;charset=UTF-8",
	".dtd"   => "text/xml;charset=UTF-8",
	".xml"   => "text/xml;charset=UTF-8"
)

##### Debug tool
$HTTP["url"] =~ "^/debug/" {
	auth.require = ()
	ssl.engine = "disable"
	# Match URLs starting with /debug/
	cgi.assign = ( "" => "" )
}


# csrf.require-user = "enable"
# csrf.debug = "disable"
# csrf.hash = "sha256"
# csrf.header = "X-Csrf-Token"
# csrf.ttl = 600

####compress module
compress.allowed-encodings = ("bzip2", "gzip", "deflate")
compress.cache-dir          = "/tmp/cache/lighttpd/compress/"
compress.filetype           = ("text/json","text/plain","text/css", "text/xml", "text/javascript","application/javascript","application/json")

#### auth module
$HTTP["url"] =~ "" {
auth.backend = "htdigest"
auth.backend.htdigest.userfile = "/opt/intel/etc/usermgmt/lighttpdadmin.user"
        auth.require = (
               "" => (
                      "method"  => "digest",
                      "realm"   => "auth",
                      "require" => "valid-user"
		)
	)
}

ssl.disable-client-renegotiation = "enable"

#### SSL engine
$SERVER["socket"] == ":443" {
ssl.engine = "enable"
ssl.openssl.ssl-conf-cmd = ("Protocol" => "-All, TLSv1.2")
ssl.pemfile = "/etc/lighttpd/certs/lighttpd.pem"
ssl.honor-cipher-order = "enable"
ssl.cipher-list = "EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH:AES256+EECDH:AES256+EDH:ECDHE-RSA-AES256-GCM-SHA384"
ssl.use-sslv2 = "disable"
ssl.use-sslv3 = "disable"
}